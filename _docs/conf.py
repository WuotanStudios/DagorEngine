# -*- coding: utf-8 -*-
#
# Dagor documentation build configuration file, created by
# sphinx-quickstart on Sun Jan 31 00:26:52 2016.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
import time

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
sys.path.insert(0, os.path.abspath('source/'))
sys.path.insert(0, os.path.abspath('.'))
sys.path.insert(0, os.path.abspath('..'))
dagor_prog_root = os.path.abspath('../prog')
sys.path.append(os.path.join(dagor_prog_root, "1stPartyLibs/daScript/doc/source"))

extensions = [
  'quirrel',
  'myst_parser',
  'quirrel_pygment_lexer',
  'sphinx-design',
  'breathe',
  'daslang',
  'sphinx.ext.duration',
  'sphinx.ext.autodoc',
  'sphinx.ext.autosummary',
  'sphinx.ext.viewcode',
  'sphinx_markdown_tables',
  'hoverxref.extension',
  'versionwarning.extension',
  'sphinx_copybutton',
  'sphinxcontrib.video',
]

myst_enable_extensions = [
    "amsmath",
    "attrs_inline",
    "colon_fence",
    "deflist",
    "dollarmath",
    "fieldlist",
    "html_admonition",
    "html_image",
    "linkify",
    "replacements",
    "smartquotes",
    "strikethrough",
    "substitution",
    "tasklist",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = ['.rst', '.md']
# source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Dagor Documentation'
copyright = 'Gaijin Entertainment %s' % time.strftime('%Y')
author = u'Gaijin Entertainment'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
version = u'0.1.0'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'navigation_depth': -1,
}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = 'gaijin_round_blur.png'

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = 'gaijin.ico'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# These paths are either relative to html_static_path
# or fully qualified paths (eg. https://...)
html_css_files = [
    'custom.css',
]

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
#html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# Now only 'ja' uses this config value
#html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'dagor_doc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',

# Latex figure (float) alignment
#'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
#_stdauthor = r'Gaijin Entertainment'
#latex_documents = [
#    ('dagor_native_modules/index', 'dagor_native_modules.tex',
#     'Dagor Manual', _stdauthor, 'manual'),
#]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'Dagor Docs', u'Dagor Documentation',
     [author], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Dagor Docs', u'Dagor Docs',
     author, 'Dagor', 'Modules and Libraries.',
     'Miscellaneous'),
]

#def setup(app):
#    app.srcdir = pathlib.Path('source')
#    app.add_css_file('custom.css')

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False
myst_heading_anchors = 7

rst_prolog = """

.. role:: sq(code)
   :language: sq

.. role:: cpp(code)
   :language: cpp

"""


# -- Options for breathe -----------------------------------------------------

# You see, all of spinx config stuff is relative to conf.py, INCLUDING
# breathe's `breathe_projects` and `breathe_projects_source` options, right?
# BUT `breathe_build_directory` IS DIFFERENT! It's relative to the cwd
# of the script that runs sphinx-build.
# BEWARE OF THIS IF YOU EVER WANT TO CHANGE THIS!

breathe_build_directory = '_build'

breathe_projects = {
    'd3dAPI' : '_build/breathe/doxygen/d3dAPI/xml',
    'd3dHelpers' : '_build/breathe/doxygen/d3dHelpers/xml',
    'daBFG' : '_build/breathe/doxygen/daBFG/xml',
    'resourceSlot' : '_build/breathe/doxygen/resourceSlot/xml',
}

def get_headers(path):
    return path, [filename for filename in os.listdir(path) if filename.endswith(".h")]

breathe_projects_source = {
    'd3dAPI': get_headers(os.path.join(dagor_prog_root, 'dagorInclude/drv/3d')),
    'd3dHelpers': (os.path.join(dagor_prog_root, 'dagorInclude/3d'), [
        'dag_multidrawContext.h',
        'dag_resMgr.h',
        'dag_texMgr.h',
    ]),
    "daBFG": get_headers(os.path.join(dagor_prog_root, 'gameLibs/publicInclude/render/daBfg')),
    "resourceSlot": get_headers(os.path.join(dagor_prog_root, 'gameLibs/publicInclude/render/resourceSlot')),
}

breathe_show_include = False

breathe_doxygen_aliases = {
    # used by the documentation for DeviceDriverCapabilities to add notes with platform specific constants
    'constcap{1}': r'\copybrief \1 \ref \1',
    # used by the documentation for DeviceDriverCapabilities to add references to the base type
    'basecap{1}': r'\details \copybrief \1 \see \1',
    # used by the documentation for DeviceDriverCapabilities to add notes for platform specific runtime values
    'runtimecap{2}': r'Runtime defined on \2. \ref \1',
    # here are some shortcuts for names of platforms, vendors and such, that are commonly used in the documentation
    'microsoft': 'Microsoft',
    'win32': 'Windows',
    'windows': r'\win32',
    'xbone': 'Xbox One',
    'xboxone': r'\xbone',
    'scarlett': 'Xbox Series X / S',
    'xbox': r'\xbone and \scarlett',
    'sony': 'Sony',
    'ps4': 'PlayStation 4',
    'ps5': 'PlayStation 5',
    'ps': r'\ps4 and \ps5',
    'nintendo': 'Nintendo',
    'nswitch': r'\nintendo Switch',
    'apple': 'Apple',
    'ios': 'iOS',
    'mac': 'macOS',
    'tvos': 'tvOS',
    'google': 'Google',
    'android': 'Android',
    'linux': 'Linux',
    'nvidia': 'Nvidia',
    'AMD': 'AMD',
    'amd': r'\AMD',
    'ATI': 'AMD / ATI',
    'ati': r'\ATI',
    'intel': 'Intel',
    'ARM': 'ARM',
    'arm': r'\ARM',
    'mali': r'\arm Mali',
    'imgtec': 'imgTec',
    'powervrr': r'\imgtec Power VR Rogue',
    'qcomm': 'Qualcomm',
    'adreno': r'\qcomm Adreno',
    'mesa': 'Mesa 3D',
    'dx11': 'DirectX 11',
    'dx12': 'DirectX 12',
    'khronos': 'Khronos',
    'vk': 'Vulkan',
    'metal': 'Metal',
    'llvmpipe': r'\mesa LLVM pipe',
    # pretty much all briefs of the device driver feature caps start with the same phrase, so we have a alias for it, to cut down on typing
    'capbrief': r'\brief Indicates that the device driver',
    'briefconstcap{2}': r'\brief Constant \1\basecap{\2}',
    'NYI': r'\remarks This feature can be supported, but is not yet implemented.',
    'someNYI': r'\remarks Some drivers without support could support this feature, but do not implement it yet.',
    'constissue{1}': r'\copybrief \1 \ref \1',
    'baseissue{1}': r'\details \copybrief \1 \see \1',
    'briefconstissue{3}': r'\brief Is constant \1 on \2 \baseissue{\3}',
    'runtimeissue{2}': r'Runtime defined on \2. \ref \1',
    'caprefc{3}': r'\ref \3::\2 \"\1\"',
    'caprefa{3}': r'\ref \3::\2 \"\1\"',
    'caprefr{3}': r'\ref \3 \"\1\"',
    'caprefc{4}': r'\ref \3::\2 \"\1\"',
    'caprefa{4}': r'\ref \4::\2 \"\1\"',
    'caprefr{4}': r'\ref \3 \"\1\"',
    'capvaluec{2}' : r'\copybrief \2::\1',
    'capvaluea{2}' : r'\copybrief \2::\1',
    'capvaluer{2}' : r'Runtime determined.',
    'capvaluec{3}' : r'\copybrief \2::\1',
    'capvaluea{3}' : r'\copybrief \3::\1',
    'capvaluer{3}' : r'Runtime determined.',
    'platformtable{12}': r'''\note <table>^^\
    <tr><th>Platform<th>Value^^\
    <tr><td>\capref\2{\xbone,\1,DeviceDriverCapabilitiesXboxOne} <td>\capvalue\2{\1,DeviceDriverCapabilitiesXboxOne} ^^\
    <tr><td>\capref\3{\scarlett,\1,DeviceDriverCapabilitiesScarlett,DeviceDriverCapabilitiesXboxOne} <td>\capvalue\3{\1,DeviceDriverCapabilitiesScarlett,DeviceDriverCapabilitiesXboxOne} ^^\
    <tr><td>\capref\4{\ps4,\1,DeviceDriverCapabilitiesPS4} <td>\capvalue\4{\1,DeviceDriverCapabilitiesPS4} ^^\
    <tr><td>\capref\5{\ps5,\1,DeviceDriverCapabilitiesPS5,DeviceDriverCapabilitiesPS4} <td>\capvalue\5{\1,DeviceDriverCapabilitiesPS5,DeviceDriverCapabilitiesPS4} ^^\
    <tr><td>\capref\6{\ios,\1,DeviceDriverCapabilitiesIOS} <td>\capvalue\6{\1,DeviceDriverCapabilitiesIOS} ^^\
    <tr><td>\capref\7{\tvos,\1,DeviceDriverCapabilitiesTVOS} <td>\capvalue\7{\1,DeviceDriverCapabilitiesTVOS} ^^\
    <tr><td>\capref\8{\nswitch,\1,DeviceDriverCapabilitiesNintendoSwitch} <td>\capvalue\8{\1,DeviceDriverCapabilitiesNintendoSwitch} ^^\
    <tr><td>\capref\9{\android,\1,DeviceDriverCapabilitiesAndroid} <td>\capvalue\9{\1,DeviceDriverCapabilitiesAndroid} ^^\
    <tr><td>\capref\10{\mac,\1,DeviceDriverCapabilitiesMacOSX} <td>\capvalue\10{\1,DeviceDriverCapabilitiesMacOSX} ^^\
    <tr><td>\capref\11{\linux,\1,DeviceDriverCapabilitiesLinux} <td>\capvalue\11{\1,DeviceDriverCapabilitiesLinux} ^^\
    <tr><td>\capref\12{\win32,\1,DeviceDriverCapabilitiesWindows} <td>\capvalue\12{\1,DeviceDriverCapabilitiesWindows} ^^\
    </table>''',
}

breathe_doxygen_config_options = {
    'ENABLE_PREPROCESSING': 'YES',
    # this might be a bad idea
    'MACRO_EXPANSION': 'YES',
    # Omitting the __restrict specifier from documentation is BAD,
    # but we have to do it because breathe doesn't seem to support it.
    'PREDEFINED': 'DOXYGEN declare_new(x)= __restrict= __forceinline=',
}
