Root    ?= ../../.. ;
Location = prog/engine/shaders ;

TargetType  = lib ;
Target      = engine/shaders.lib ;

CamStub ?= yes ;

Sources =
  shaderVariableInfo.cpp
  overrideStates.cpp
  renderStates.cpp
  shadersBinaryDataDbg2.cpp
  shaderBlock.cpp
  globVarsBlk.cpp
  postFxRenderer.cpp
  shStateBlk.cpp
  shStateBlkClose.cpp
  shStateBlkData.cpp
  shaders_globdata.cpp
  scene_binload.cpp
  shaderMesh.cpp
  shaderMeshSimple.cpp
  shaderResUnitedData.cpp
  shUtils.cpp
  shUtilsEx.cpp
  dynamicShaderHelper.cpp
  dynamicShadersBuffer.cpp
  dynShaderBuf.cpp
  debugPrimitivesVbuffer.cpp
  scene.cpp
  scene_vis.cpp
  shadersBinaryDataLoad.cpp
  shadersBinaryDataVars.cpp
  shadersBinaryDataDbg.cpp
  shadersDbg.cpp
  shadersCon.cpp
  scriptSElem.cpp
  scriptSMat.cpp
  shaders.cpp
  shadersRes.cpp
  shFunc.cpp
  shSkinnedMesh.cpp
  dynSceneRes.cpp
  dynSceneWithTreeRes.cpp
  objVisDebugData.cpp
  rendInstRes.cpp
  instShaderMeshRes.cpp
  matVdata.cpp
  matVdataLoad.cpp
  shaderMeshTexLoadCtrl.cpp
  computeShaders.cpp
  sh_vars.cpp
  shMaterialUtils.cpp
  shStateBlockBindless.cpp
  shStateBlockSlotTextures.cpp
  shAssert.cpp
  bindposeBufferManager.cpp
;

AddIncludes =
  $(Root)/1stPartyLibs
  $(Root)/prog/engine/sharedInclude
;

UseProgLibs +=
  3rdPartyLibs/eastl
  3rdPartyLibs/meshoptimizer
;

if $(ShadersAllowAltBindump) = yes || $(BuildingTools) = yes {
  Target = $(Target:S=-2.lib) ;
  CPPopt += -DSHADERS_ALLOW_2_BINDUMP ;
}
if $(ShadersMeasurePerf) = yes {
  Target = $(Target:S=-p.lib) ;
  CPPopt += -DMEASURE_STCODE_PERF ;
}

if $(CppStcode) = enable {
  Target = $(Target:S=-stcpp.lib) ;
  Sources +=
    stcode.cpp
    stcode/stcodeCallbacksImpl.cpp
  ;
  CPPopt += -DCPP_STCODE=1 ;
} else if $(CppStcode) = both {
  Target = $(Target:S=-stboth.lib) ;
  Sources +=
    stcode.cpp
    stcode/stcodeCallbacksImpl.cpp
  ;
  CPPopt += -DCPP_STCODE=1 -DSTCODE_RUNTIME_CHOICE=1 ;
} else if $(CppStcode) = validate {
  Target = $(Target:S=-stcpp-val.lib) ;
  Sources +=
    stcode.cpp
    stcode/stcodeCallbacksImpl.cpp
    stcode/compareStcode.cpp
  ;
  CPPopt += -DCPP_STCODE=1 -DVALIDATE_CPP_STCODE=1 ;
}

if $(CamStub) = yes {
  Target = $(Target:S=-cs.lib) ;
  CPPopt += -DCAM_STUB=1 ;
}

if $(ProfileStcode) = yes {
  Target = $(Target:S=-sp.lib) ;
  Sources += profileStcode.cpp ;
  CPPopt += -DPROFILE_STCODE=1 ;
}

include $(Root)/prog/_jBuild/build.jam ;
