Root    ?= ../../../.. ;
Location = prog/engine/drv/drv3d_DX11 ;

include $(Root)/prog/_jBuild/defaults.jam ;

TargetType  = lib ;
Target      = engine/drv/drv3d_DX11.lib ;

Sources =
  init.cpp
  drvmain.cpp
  states.cpp
  rtarget.cpp
  texture.cpp
  shaders.cpp
  buffers.cpp
  sampler.cpp
  genericBuffer.cpp
  init_d3di.cpp
  basetex.cpp
  immediateConst.cpp
  helpers.cpp
  memory_metrics.cpp
  clear.cpp
;


AddIncludes =
  $(Root)/prog/engine/sharedInclude
  $(Root)/prog/engine/drv/drv3d_commonCode
  $(Root)/prog/3rdPartyLibs/nvapi
  $(Root)/prog/3rdPartyLibs/aftermath/2024.1.0.24075
  $(Root)/prog/3rdPartyLibs/adl_sdk
  $(Root)/prog/engine/drv/drv3d_DX11
;

AddLibs += Version.lib ;

CPPopt = -D__B_DRVDX -DINSIDE_DRIVER -FId3d_config.h ;
if [ GLOB $(Root)/prog/3rdPartyLibs/nvapi : * ]     { CPPopt += -DHAS_NVAPI ; }
if [ GLOB $(Root)/prog/3rdPartyLibs/aftermath : * ] { CPPopt += -DHAS_GF_AFTERMATH ; }
if $(PlatformArch) in arm64 { CPPopt = [ StripStrings $(CPPopt) : -DHAS_NVAPI ] ; }

AddIncludes += $(Root)/prog/3rdPartyLibs/streamline/include ;

UseProgLibs = engine/drv/drv3d_commonCode ;

include $(Root)/prog/_jBuild/build.jam ;
