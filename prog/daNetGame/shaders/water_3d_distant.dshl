include "water_3d_geometry.dshl"
include "water_3d_color.dshl"
include "viewVecVS.dshl"

shader water_distant
{
  z_test = true;
  z_write = false;
  z_func = equal;

  ENABLE_ASSERT(ps)

  hlsl(ps)
  {
    float4 use_indoor_probes(float3 world_pos, float3 normal, float3 reflected, float roughnessMip, float viewDist)
    {
      return float4(0, 0, 0, 1);
    }
  }

  INIT_WATER_3D_DEFERRED_COLOR()
  USE_WATER_DISTANT_COMMON()
  USE_WATER_3D_DEFERRED_COLOR()

  hlsl(ps) {
    float4 water_nv_ps(VsOutput input HW_USE_SCREEN_POS) : SV_Target0
    {
      half3 worldNormal;
      PS_INPUT In = get_spoofed_ps_input(input, worldNormal);
      return calc_water_color_from_ps_input(In, 1, worldNormal);
    }
  }

  if (in_editor_assume == yes) {dont_render;}
  compile("target_ps", "water_nv_ps");
}
