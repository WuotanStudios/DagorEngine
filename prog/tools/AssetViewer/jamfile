Root    ?= ../../.. ;
Location = prog/tools/AssetViewer ;
KernelLinkage = dynamic ;
BuildingTools = yes ;
include $(Root)/prog/tools/tools_setup.jam ;

UseD3DMulti = yes ;
UseD3DMultiList = DX11 stub ;
UseQuirrel = sq3r+ ;

VRDeviceSupport = yes ;
VRDeviceOptional = yes ;
ToolsHaveVR ?= yes ;

DagorAnim_MEASURE_PERF = 1 ;
DagorMath_MEASURE_PERF = 1 ;
DagorFastPhys_MEASURE_PERF = 1 ;
# approximately ~5 sec (at 200 fps)
DagorAnim_MEASURE_PERF_FRAMES = 1000 ;
DagorMath_MEASURE_PERF_FRAMES = 1000 ;
DagorFastPhys_MEASURE_PERF_FRAMES = 1000 ;

DafxGravityZone ?= yes ;

TargetType  = exe ;
Target      = tools/assetViewer2.exe ;
include $(Root)/prog/tools/tools_setup_outdir_bin.jam ;

include $(Root)/prog/_jBuild/defaults.jam ;

if $(Platform)-$(PlatformArch) = windows-arm64 { VRDeviceSupport = no ; }

AddIncludes =
  $(Root)/prog/tools/sharedInclude
  $(Root)/prog/tools/sceneTools/daEditorX/include
  $(Root)/prog/gameLibs/publicInclude/squirrel
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/engine/sharedInclude
  $(Root)/prog/tools/sceneTools/impostorBaker
  $(Root)/prog/tools/sceneTools/pointCloudGen/generator
  $(Root)/prog/gameLibs/rendInst
;

Sources =
  main.cpp

  console.cpp
  av_version.cpp
  av_appwnd.cpp
  av_engine.cpp
  av_mainAssetSelector.cpp
  av_tree.cpp
  av_srvEngine.cpp
  av_dagored2stub.cpp
  av_environment.cpp
  av_plugins.cpp
  av_viewportWindow.cpp

  assetBuildCache.cpp

  assetViewerRes.rc
  av_util.cpp
  av_script_panel.cpp
  av_ecsPull.cpp

  badRefFinder.cpp
  compositeAssetCreator.cpp
;

UseProgLibs =
  engine/startup
  engine/math
  engine/coreUtil
  engine/workCycle
  engine/lib3d
  engine/shaders
  engine/scene
  engine/image
  engine/guiBase

  engine/drv/hid_dinput
  engine/drv/hid_gamepad_xinput
  engine/drv/hid_joystick
  engine/drv/hid_mouse
  engine/drv/hid_keyboard
  engine/drv/drv3d_pc_multi

  engine/gameRes
  engine/libFx
  engine/sceneRay
  engine/perfMon
  engine/consoleProc
  engine/imgui

  engine/anim
  engine/animChar
  engine/phys/fastPhys

  tools/libTools/assetMgr
  tools/libTools/assetMgrHlp
  tools/libTools/assetsGui

  tools/libTools/util
  tools/libTools/renderUtil
  tools/libTools/shaderResBuilder
  tools/libTools/EditorCore
  tools/libTools/fastPhysData
  tools/libTools/objectEditor
  tools/libTools/renderViewports
  tools/libTools/staticGeom
  tools/libTools/sceneBuilder
  tools/libTools/scriptHelpers
  tools/libTools/dtx
  tools/libTools/objCreator3d
  tools/libTools/winGuiWrapper
  tools/libTools/staticGeomUi
  tools/libTools/scriptPanelWrapper
  tools/libTools/math
  tools/libTools/grsCurView

  tools/sceneTools/daEditorX/services/dynRenderSrv
  tools/sceneTools/daEditorX/services/wind
  tools/sceneTools/daEditorX/services/riMgr
  tools/sceneTools/daEditorX/services/prefabMgr
  tools/sceneTools/daEditorX/services/fxMgr
  tools/sceneTools/daEditorX/services/efxMgr
  tools/sceneTools/daEditorX/services/physobjMgr
  tools/sceneTools/daEditorX/services/gameobjMgr
  tools/sceneTools/daEditorX/services/compositMgr
  tools/sceneTools/daEditorX/services/invalidEntityMgr
  tools/sceneTools/daEditorX/services/bitMaskMgr
  tools/sceneTools/daEditorX/services/dynModelMgr
  tools/sceneTools/daEditorX/services/animCharMgr
  tools/sceneTools/daEditorX/services/assetSrv
  tools/sceneTools/daEditorX/services/dxpFactory
  tools/sceneTools/daEditorX/services/lightSrv
  tools/sceneTools/daEditorX/services/dynModelMgr
  tools/sceneTools/daEditorX/services/physobjMgr
  tools/sceneTools/daEditorX/services/pixelPerfectSelection
  tools/sceneTools/daEditorX/services/skiesSrv
  tools/sceneTools/daEditorX/services/colorRangeSrv
  tools/sceneTools/daEditorX/services/csgEntMgr
  tools/sceneTools/daEditorX/services/cableSrv
  tools/sceneTools/daEditorX/services/splineGenSrv
  tools/sceneTools/daEditorX/services/ecsMgr
  tools/sceneTools/daEditorX/services/webui
  tools/sceneTools/daEditorX/services/ecsInput
  tools/sceneTools/daEditorX/services/dasMgr
  tools/sceneTools/daEditorX/services/visibilityFinderSrv

  tools/sceneTools/impostorBaker/impostorUtil

  tools/sceneTools/pointCloudGen/generator

  tools/libTools/propPanel
  tools/libTools/sepGui
  tools/libTools/dagFileRW

  engine/phys/physCommon
  engine/phys/physBullet
  engine/phys/physJolt
  gameLibs/vehiclePhys/vehiclePhys-BULLET
  gameLibs/render
  gameLibs/rendInst/riFx/stub
  gameLibs/landMesh
  gameLibs/textureUtil
  gameLibs/render/dof
  gameLibs/render/wind
  gameLibs/render/volumetricLights/stub
  gameLibs/render/nodeBasedShader/stub
  gameLibs/nodeBasedShaderManager/stub
  gameLibs/ecs/rendInst/stub
  gameLibs/ecs/delayedAct
  gameLibs/ecs/input

  gameLibs/quirrel/bindQuirrelEx
  commonFx/commonFxGame
  commonFx/commonFxTools

  tools/AssetViewer/Textures
  tools/AssetViewer/Nodes
  tools/AssetViewer/Prefabs
  tools/AssetViewer/LandClass
  tools/AssetViewer/Materials
  tools/AssetViewer/Splines
  tools/AssetViewer/collision
  tools/AssetViewer/Entity
  tools/AssetViewer/Grass
  tools/AssetViewer/TifMask
  tools/AssetViewer/PhysObj
  tools/AssetViewer/fxEdit
  tools/AssetViewer/FastPhys
  tools/AssetViewer/Custom
  tools/AssetViewer/RandomGrass
  tools/AssetViewer/csgEntity
  tools/AssetViewer/A2d
  tools/AssetViewer/animTree

  3rdPartyLibs/image/libpng-1.4.22
  3rdPartyLibs/arc/zlib-$(UseZlibVer)
  3rdPartyLibs/image/psdRead
  3rdPartyLibs/hash

  gameLibs/imguiInput
;
gamePulls =
  daECS/core/componentType.h # first line is used for include!
  game_pulls                 #second line is name of var
;

if $(VRDeviceSupport) = yes {
  BundleCopy +=
    @$(OpenXrSdkPath)/$(LegacyPlatformSuffix)/bin/openxr_loader.dll openxr_loader.dll
    @$(OpenXrSdkPath)/$(LegacyPlatformSuffix)/bin/openxr_loader.pdb openxr_loader.pdb
  ;
}

if [ GLOB $(Root)/prog/gameLibs/damageModel : * ] { UseProgLibs += gameLibs/damageModel/stub ; }

if [ GLOB $(Root)/skyquake/prog/tools : * ] { # FIXME_BROKEN_DEP
  UseRootLibs =
    skyquake/prog/tools/wtUnit_av2 # FIXME_BROKEN_DEP
  ;
  CPPopt += -DHAS_PLUGIN_WT_UNIT ;
}

gamePulls +=
  actInThread_pull
;

gamePulls_action = make_module_pull_cpp ;
Sources += gamePulls.jamvar ;

ImportProgLibs = tools/libTools/daKernel ;

if ! $(DagoredRel) {
  LINKopt = -opt:noref ;
}

include $(Root)/prog/_jBuild/build.jam ;
