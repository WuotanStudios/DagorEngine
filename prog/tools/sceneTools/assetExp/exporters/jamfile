Root    ?= ../../../../.. ;
Location = prog/tools/sceneTools/assetExp/exporters ;
if $(DabuildEmbeddedInGame) != yes {
  include $(Root)/prog/tools/tools_setup.jam ;
  if $(KernelLinkage) = dynamic { exit \"$(Location)\" lib must be built with KernelLinkage\=static ; }
}
TargetType  = lib ;
Target = tools/sceneTools/assetExp/exporters.lib ;

include $(Root)/prog/_jBuild/defaults.jam ;

ShadersAllowAltBindump = yes ;

Sources =
  static_exp_lib.cpp
  exp_skeleton_tools.cpp
  exp_tools.cpp
  fxExpStubs.cpp
  modelExpUtil.cpp

  a2dExp.cpp a2dOptimizer.cpp

  animCharExp.cpp exp_animTree.cpp exp_stateGraph.cpp exp_animChar.cpp

  modelExp.cpp exp_rendInst.cpp exp_dynModel.cpp exp_skeleton.cpp exp_rndGrass.cpp

  exp_collision.cpp

  fastPhysExp.cpp

  phObjExp.cpp phSysObj.cpp

  fxExp.cpp

  landClsExp.cpp

  locShadersExp.cpp

  matExp.cpp

  texExp.cpp

  exp_impostorData.cpp

  vehiclePhysExp.jamvar
  shipSectionsExp.jamvar
;


AddIncludes =
  $(Root)/prog/tools/sharedInclude
  $(Root)/prog/3rdPartyLibs/convert/nvtt-2.0.7
  $(Root)/prog/engine/sharedInclude
  $(Root)/prog/tools/sceneTools/daEditorX/include
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/3rdPartyLibs/math/vhacd
  $(Root)/prog/3rdPartyLibs/acl/includes
;


UseProgLibs =
  engine/lib3d
  engine/shaders
  engine/sceneRay
  engine/perfMon
  engine/image

  engine/gameRes
  engine/sceneRay
  engine/scene
  engine/coreUtil

  tools/libTools/assetMgr
  tools/libTools/assetMgrHlp
  tools/libTools/shaderResBuilder
  tools/libTools/dagFileRW
  tools/libTools/util
  tools/libTools/ambientOcclusion
  tools/libTools/pageAsg
  tools/libTools/fastPhysData
  tools/libTools/math
  tools/libTools/collision
  tools/sceneTools/daEditorX/services/bitMaskMgr

  tools/sceneTools/assetExp/exporters/scriptHelpersLt
  commonFx/commonFxTools

  3rdPartyLibs/math/srcc_msu
  3rdPartyLibs/convert/nvtt-2.0.7
  3rdPartyLibs/image/avif
  3rdPartyLibs/image/jpeg-6b
  3rdPartyLibs/image/psdRead
  3rdPartyLibs/image/libpng-1.4.22
  3rdPartyLibs/arc/zlib-$(UseZlibVer)
  3rdPartyLibs/math/vhacd
;


if vehiclePhys in $(DabuildUseOptionalExporters) {
  vehiclePhysExp = \# include \"../../../../gameLibs/vehiclePhys/exporters/vehicleExp.cpp\" ;
} else { vehiclePhysExp = int pull_vehicle=0; ; }

if shipSections in $(DabuildUseOptionalExporters) {
  shipSectionsExp = \# include \"../../../../gameLibs/gamePhys/phys/shipSections/exporters/sectionsExp.cpp\" ;
  UseProgLibs += gameLibs/gamePhys/phys/shipSections gameLibs/gamePhys/props ;
} else { shipSectionsExp = int pull_shipSections=0; ; }

if apex in $(DabuildUseOptionalExporters) && $(PlatformArch) = x86_64 {
  Sources += apexDestrExp.cpp ;

  local apex_include =
    $(Root)/prog/3rdPartyLibs/phys/fractureTool
    $(Root)/prog/3rdPartyLibs/apex/framework/public/PhysX3
    $(Root)/prog/3rdPartyLibs/apex/framework/public
    $(Root)/prog/3rdPartyLibs/apex/NxParameterized/public
    $(Root)/prog/3rdPartyLibs/apex/module/destructible/public
    $(Root)/prog/3rdPartyLibs/apex/shared/internal/include
    $(Root)/prog/3rdPartyLibs/apex/shared/general/meshimport/include/MeshImport
    $(Root)/prog/3rdPartyLibs/apex/public
    $(Root)/prog/3rdPartyLibs/physx/Include
    $(Root)/prog/3rdPartyLibs/phys/fractureTool/1.3.2-gj/shared/internal/include
    $(Root)/prog/3rdPartyLibs/phys/fractureTool/1.3.2-gj/shared/general/meshimport/include/MeshImport
  ;
  local apex_suppress = ;
  if $(PlatformSpec) = clang { apex_suppress += -Wno-return-type-c-linkage ; }

  opt on apexDestrExp.cpp = $(apex_suppress) -I$(apex_include) ;
  if $(Config) != dbg {
    opt on apexDestrExp.cpp += -DNDEBUG ;
  }
  if $(Platform) in macOS { opt on apexDestrExp.cpp += -Wno-deprecated-declarations ; }

  UseProgLibs += 3rdPartyLibs/phys/fractureTool ;
} else { apexExp = int pull_apex \= 0\; ; Sources += apexExp.jamvar ; }

if $(DabuildEmbeddedInGame) != yes {
  CPPopt += -D_DEBUG_TAB_ ;
} else {
  Target  = $(Target:S=~emb.lib) ;
  CPPopt += -D_TARGET_EXPORTERS_STATIC ;
}

if $(PlatformArch) = e2k {
  CPPopt += -DTEX_CANNOT_USE_ISPC ;
} else {
  AddIncludes += $(Root)/prog/3rdPartyLibs/convert/ispc_texcomp ;
  UseProgLibs += 3rdPartyLibs/convert/ispc_texcomp ;
}

include $(Root)/prog/_jBuild/build.jam ;
